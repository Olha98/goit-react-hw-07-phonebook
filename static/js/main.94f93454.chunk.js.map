{"version":3,"sources":["Components/Form/Form.module.css","Components/Form/ListPeople/ListPeople.module.css","Components/Form/FillterForm/FillterForm.module.css","Components/Form/ContactForm/ContactForm.module.css","Components/Alert/Alert.module.css","Redux/Actions/Actions.js","Redux/Operations/operations.js","Components/Form/ListPeople/ListItemPeople/ListItemPeople.js","Redux/Selections/selections.js","Components/Form/ListPeople/ListPeople.js","Components/Form/FillterForm/FillterForm.js","Components/Form/ContactForm/ContactForm.js","Components/Alert/Alert.js","Components/Form/Form.js","Redux/Reducers/Reducers.js","Redux/store.js","index.js"],"names":["module","exports","filterChange","createAction","filter","payload","alertError","addContactRequest","addContactSuccess","addContactError","getContactsRequest","getContactsSuccess","getContactsError","removeContactRequest","removeContactSuccess","removeContactError","contact","dispatch","actions","axios","post","then","responce","console","log","id","data","name","catch","error","a","get","result","keys","Object","reduce","acc","key","push","delete","connect","onRemoveContact","e","operations","target","number","className","style","listItem","type","onClick","getContactSelection","state","contacts","getAlertSelection","alert","getFilterSelection","getContactFilterSelection","toLowerCase","includes","selections","TransitionGroup","list","map","CSSTransition","timeout","classNames","uuidv4","mapDispatchToProps","onfilterChange","Actions","value","contactsTitle","onChange","ContactForm","handleChange","containerUser","AlertModal","Alert","variant","css","boxAlert","Heading","initialState","App","setState","handleSubmit","preventDefault","errorContacts","props","length","find","errorItem","alertShow","onAddContacts","onAlertError","setTimeout","this","onGetContactOperation","in","appear","unmountOnExit","onSubmit","formContainer","Component","contactOperation","createReducer","action","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactReducer","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.94f93454.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"Form_appear__2e7EE\",\"appearActive\":\"Form_appearActive__170ts\",\"formContainer\":\"Form_formContainer__FpX3R\",\"boxAlert\":\"Form_boxAlert__zywhA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ListPeople_list__10o9x\",\"enter\":\"ListPeople_enter__1I9sK\",\"enterActive\":\"ListPeople_enterActive__3WvFf\",\"exit\":\"ListPeople_exit__1eu98\",\"exitActive\":\"ListPeople_exitActive__2ksQN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsTitle\":\"FillterForm_contactsTitle___JL_W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerUser\":\"ContactForm_containerUser__1Q4Sf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"Alert_enter__aQoIn\",\"enterActive\":\"Alert_enterActive__2Btu6\",\"exit\":\"Alert_exit__15eGw\",\"exitActive\":\"Alert_exitActive__fhlBB\",\"alert\":\"Alert_alert__3EkcG\",\"message\":\"Alert_message__1_Hm5\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst filterChange = createAction('contacts/filterChange', filter=>({ payload:{filter}}))\r\nconst alertError = createAction('contacts/alertError')\r\n\r\nconst addContactRequest = createAction(\"contact/ADDTASKREQUEST\");\r\nconst addContactSuccess = createAction(\"contact/ADDTASKSUCCESS\");\r\nconst addContactError = createAction(\"contact/ADDTASKERROR\");\r\n\r\nconst getContactsRequest = createAction(\"contact/GETCONTACTREQUEST\");\r\nconst getContactsSuccess = createAction(\"contact/GETCONTACTSUCCESS\");\r\nconst getContactsError = createAction(\"contact/GETCONTACTERROR\");\r\n\r\n\r\nconst removeContactRequest = createAction(\"contact/removeASKREQUEST\");\r\nconst removeContactSuccess = createAction(\"contact/removeTASKSUCCESS\");\r\nconst removeContactError = createAction(\"contact/removeTASKERROR\");\r\n\r\n\r\nexport default { \r\n  filterChange, \r\n  alertError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  getContactsRequest,\r\n  getContactsSuccess,\r\n  getContactsError,\r\n  removeContactRequest,\r\n  removeContactSuccess,\r\n  removeContactError\r\n}\r\n\r\n","import actions from '../Actions/Actions'\r\nimport axios from 'axios'\r\n\r\nconst addContactOperation = contact => dispatch => {\r\n\r\n  dispatch(actions.addContactRequest())\r\n  axios.post('https://redux-async.firebaseio.com/contacts.json', contact)\r\n    .then(responce => {\r\n\r\n      console.log(responce, \"responce\")\r\n      dispatch(actions.addContactSuccess({ ...contact, id: responce.data.name }))\r\n    }).catch(error => dispatch(actions.addContactError(error)))\r\n}\r\n\r\n\r\nconst removeContactOperation  = id => dispatch => {\r\n  dispatch(actions.removeContactRequest());\r\n  axios\r\n    .delete(`https://redux-async.firebaseio.com/contacts/${id}.json`)\r\n.then(() => {\r\n  console.log(id,\"SuccessID\")\r\n  dispatch(actions.removeContactSuccess(id))})\r\n    .catch(error => {\r\n      console.log(error,\"error\")\r\n      dispatch(actions.removeContactError(error))});\r\n};\r\n\r\n\r\n\r\nconst getContactOperation = () => async dispatch => {\r\n\r\n  dispatch(actions.getContactsRequest())\r\n  try {\r\n    const result = await axios.get('https://redux-async.firebaseio.com/contacts.json');\r\n    console.log(result, \"RESULT\")\r\n    const keys = Object.keys(result.data);\r\n    const data = keys.reduce((acc, key) => {\r\n      acc.push({ id: key, ...result.data[key] })\r\n      return acc;\r\n    }, [])\r\n    dispatch(actions.getContactsSuccess(data))\r\n  } catch (error) {\r\n    dispatch(actions.getContactsError(\"Something went wrong\"))\r\n  }\r\n \r\n}\r\n\r\n\r\n\r\nexport default { addContactOperation, getContactOperation, removeContactOperation }","import React from 'react';\r\nimport style from './ListItemPeople.module.css'\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../../../Redux/Operations/operations'\r\n\r\nconst ListItemPeople = ({ name, number, id, onRemoveContact }) => {\r\n  return (\r\n    <>\r\n      <li className={style.listItem}>{name}: {number}\r\n      <button type=\"button\" onClick={onRemoveContact} name={id}>Delite</button>\r\n      </li>\r\n    </>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onRemoveContact: (e) => {\r\n      dispatch(operations.removeContactOperation(e.target.name))},\r\n  } \r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(ListItemPeople)\r\n\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\n\r\nconst getContactSelection = state => state.contacts\r\nconst getAlertSelection = state => state.alert\r\nconst getFilterSelection = state => state.filter\r\n// const getContactFilterSelectionStart = state => state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase())) \r\n// const getContactFilterSelection = createSelector([getContactSelection, getFilterSelection],(state) => {\r\n//   return state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase())) \r\n// })\r\n\r\n// const getContactFilterSelection = state => state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()))\r\nconst getContactFilterSelection = ([getContactSelection], state => state.contacts.filter(contact => contact.name.toLowerCase().includes(state.filter.toLowerCase()))) \r\nexport default { getContactSelection, getAlertSelection, getFilterSelection, getContactFilterSelection }\r\n","import React from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ListItemPeople from './ListItemPeople/ListItemPeople';\r\nimport style from './ListPeople.module.css'\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { connect } from 'react-redux';\r\nimport selections from '../../../Redux/Selections/selections'\r\n\r\nconst ListPeople = ({ contacts}) => {\r\nconsole.log(contacts, \"contacts\")\r\n  return (\r\n    <TransitionGroup className={style.list}>\r\n\r\n      {contacts.map(contact =>\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={500}\r\n          classNames={style}>\r\n          <ListItemPeople key={uuidv4()} {...contact}/>\r\n        </CSSTransition>\r\n\r\n      )}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({state}) => ({\r\n contacts: selections.getContactFilterSelection(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(ListPeople)\r\n\r\n","import React from 'react';\r\nimport style from './FillterForm.module.css'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../../Redux/Actions/Actions'\r\n\r\nconst FillterForm=({value, onfilterChange})=>{\r\nreturn(\r\n  <>\r\n    <h2>Contacts</h2>\r\n      <label>\r\n      <p className={style.contactsTitle}>Find contacts by name</p>\r\n          <input type=\"text\" name=\"filter\"  value={value} onChange={(e) => {\r\n            onfilterChange(e.target.value)\r\n            }}/>\r\n      </label>\r\n</>\r\n)}\r\n\r\nconst mapDispatchToProps = {\r\n  onfilterChange: Actions.filterChange,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(FillterForm)\r\n\r\n","import React from 'react';\r\nimport style from './ContactForm.module.css'\r\n\r\n\r\nconst ContactForm = ({ name, number, handleChange }) => {\r\n  return (\r\n      <div className={style.containerUser}>\r\n        <label>\r\n          <p>Name</p>\r\n          <input type=\"text\" name=\"name\" onChange={handleChange} value={name} />\r\n        </label>\r\n        <label>\r\n          <p>Number</p>\r\n          <input type=\"text\" name=\"number\" onChange={handleChange} value={number} />\r\n        </label>\r\n        <button type=\"submit\">Add</button>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default ContactForm\r\n","import React from 'react';\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport css from './Alert.module.css'\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst AlertModal = () => {\r\n  return (\r\n    <div className=\"container-sm\">\r\n      <Alert variant=\"danger\" className={css.boxAlert}>\r\n        <Alert.Heading>Contact already exists!Oh snap! You got an error!</Alert.Heading>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AlertModal\r\n\r\n","import React, { Component } from 'react';\r\nimport style from './Form.module.css'\r\nimport './Form.css'\r\nimport ListPeople from './ListPeople/ListPeople';\r\nimport FillterForm from './FillterForm/FillterForm';\r\nimport ContactForm from './ContactForm/ContactForm';\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport AlertModal from '../Alert/Alert'\r\nimport Form from 'react-bootstrap/Form'\r\nimport { connect } from 'react-redux';\r\nimport Actions from '../../Redux/Actions/Actions'\r\nimport contactOperation from '../../Redux/Operations/operations'\r\nimport selections from '../../Redux/Selections/selections'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  number: '',\r\n}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    ...initialState\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.onGetContactOperation()\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, number } = this.state;\r\n    const errorContacts = this.props.contacts\r\n\r\n    if (errorContacts) {\r\n      console.log(errorContacts.length, \"errorContacts.lenght\")\r\n      const error = errorContacts.map(contact => contact)\r\n      error.find(errorItem => errorItem.name === this.state.name && errorItem.number === this.state.number)\r\n        ? this.alertShow()\r\n        : this.props.onAddContacts({ name, number });\r\n    }\r\n    this.setState({ ...initialState })\r\n  }\r\n\r\n  alertShow = () => {\r\n    this.props.onAlertError()\r\n    setTimeout(() => this.props.onAlertError(), 5000)\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { alert } = this.props\r\n    return (\r\n      <>\r\n        {alert && <CSSTransition\r\n          classNames={style}\r\n          in={true}\r\n          appear={true}\r\n          timeout={1500}\r\n          unmountOnExit\r\n        >\r\n          <AlertModal />\r\n        </CSSTransition>}\r\n        <Form onSubmit={this.handleSubmit} className={style.formContainer}>\r\n          <CSSTransition in={true} appear={true} classNames=\"title\" timeout={1000} unmountOnExit>\r\n            <h2>Phonebook</h2>\r\n          </CSSTransition>\r\n          <ContactForm handleChange={this.handleChange} name={name} number={number} />\r\n          <FillterForm />\r\n          <ListPeople />\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ state }) => {\r\n  return {\r\n    value: selections.getFilterSelection(state),\r\n    alert: selections.getAlertSelection(state),\r\n    contacts: selections.getContactSelection(state),\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAddContacts: (name, number) => dispatch(contactOperation.addContactOperation(name, number)),\r\n    onAlertError: () => dispatch(Actions.alertError()),\r\n    onGetContactOperation: () => dispatch(contactOperation.getContactOperation()),\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport Actions from '../Actions/Actions'\r\n\r\n\r\nconst onSetContact = (state, action) => [...action.payload];\r\nconst onAddTask = (state, action) => [...state, action.payload];\r\nconst onRemoveContact = (state, action) => state.filter(contact => contact.id !== action.payload);\r\n\r\nconst contacts = createReducer([], {\r\n  [Actions.getContactsSuccess]: onSetContact,\r\n  [Actions.addContactSuccess]: onAddTask,\r\n  [Actions.removeContactSuccess]: onRemoveContact,\r\n})\r\n\r\nconst filter = createReducer('', {\r\n  [Actions.filterChange]: (state, action) => action.payload.filter,\r\n})\r\n\r\nconst alert = (state = false, { type, payload }) => {\r\n\r\n  switch (type) {\r\n    case Actions.alertError.type:\r\n      return (state = !state);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ contacts, filter, alert })\r\n","import contactReducer from '../Redux/Reducers/Reducers'\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\n\r\n\r\nconst defaultMiddleware = getDefaultMiddleware();\r\n\r\n  const store = configureStore({\r\n    reducer: {\r\n      state: contactReducer,\r\n    },\r\n    middleware: [...defaultMiddleware],\r\n  });\r\n\r\nexport default store","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './Components/Form/Form';\r\nimport { Provider } from 'react-redux'\r\nimport './style.css'\r\nimport store from './Redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <App/>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}